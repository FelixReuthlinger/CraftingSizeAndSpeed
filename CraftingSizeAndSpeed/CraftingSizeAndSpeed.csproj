<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="..\packages\JotunnLib.2.21.2\build\JotunnLib.props" Condition="Exists('..\packages\JotunnLib.2.21.2\build\JotunnLib.props')"/>
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{DEAF4438-8089-40ED-8175-398E1261D45B}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>CraftingSizeAndSpeed</RootNamespace>
        <AssemblyName>CraftingSizeAndSpeed</AssemblyName>
        <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
        <FileAlignment>512</FileAlignment>
        <Deterministic>true</Deterministic>
        <NuGetPackageImportStamp>
        </NuGetPackageImportStamp>
        <TargetFrameworkProfile/>
        <LangVersion>10</LangVersion>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
        <Prefer32Bit>false</Prefer32Bit>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>
        </DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
        <Prefer32Bit>false</Prefer32Bit>
    </PropertyGroup>
    <Choose>
        <When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Valheim/Contents/MacOS</GamePath>
                <BepInExPath Condition="!Exists('$(BepInExPath)')AND Exists('$(GamePath)')">$(GamePath)/BepInEx</BepInExPath>
                <CorlibPath Condition="!Exists('$(CorlibPath)')">$(GamePath)/unstripped_corelib</CorlibPath>
                <PublicizedAssembliesPath Condition="!Exists('$(PublicizedAssembliesPath)') AND Exists('$(GamePath)')">$(GamePath)/valheim_Data/Managed/publicized_assemblies</PublicizedAssembliesPath>
            </PropertyGroup>
        </When>
        <When Condition="($(OS) == 'Windows_NT') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 892970', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
                <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
                <GamePath Condition="!Exists('$(GamePath)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)') AND Exists('$(ValheimGamePath)')">$(ValheimGamePath)</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">D:\SteamLibrary\steamapps\common\Valheim</GamePath>
                <BepInExPath Condition="!Exists('$(BepInExPath)')AND Exists('$(GamePath)')">$(GamePath)\BepInEx</BepInExPath>
                <ManagedPath Condition="!Exists('$(CorlibPath)') AND Exists('$(GamePath)')">$(GamePath)\valheim_Data\Managed</ManagedPath>
                <PublicizedAssembliesPath Condition="!Exists('$(PublicizedAssembliesPath)') AND Exists('$(GamePath)')">$(GamePath)\valheim_Data\Managed\publicized_assemblies</PublicizedAssembliesPath>
            </PropertyGroup>
        </When>
    </Choose>
    <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
        <StartAction>Program</StartAction>
        <StartProgram>$(VALHEIM_INSTALL)\valheim.exe</StartProgram>
        <StartArguments>-console</StartArguments>
        <StartWorkingDirectory>$(VALHEIM_INSTALL)</StartWorkingDirectory>
    </PropertyGroup>
    <ItemGroup>
        <Reference Include="assembly_guiutils">
            <HintPath>$(PublicizedAssembliesPath)\assembly_guiutils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_utils">
            <HintPath>$(PublicizedAssembliesPath)\assembly_utils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_valheim">
            <HintPath>$(PublicizedAssembliesPath)\assembly_valheim_publicized.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx">
            <HintPath>$(BepInExPath)\core\BepInEx.dll</HintPath>
        </Reference>
        <Reference Include="Jotunn, Version=2.21.2.0, Culture=neutral, processorArchitecture=MSIL">
            <HintPath>..\packages\JotunnLib.2.21.2\lib\net462\Jotunn.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine">
            <HintPath>$(ManagedPath)\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(ManagedPath)\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="ServerSync">
            <HintPath>..\libraries\ServerSync.dll</HintPath>
        </Reference>
        <Reference Include="System"/>
        <Reference Include="System.Core"/>
        <Reference Include="System.Xml.Linq"/>
        <Reference Include="System.Data.DataSetExtensions"/>
        <Reference Include="Microsoft.CSharp"/>
        <Reference Include="System.Data"/>
        <Reference Include="System.Xml"/>
        <Reference Include="YamlDotNet, Version=16.0.0.0, Culture=neutral, PublicKeyToken=ec19458f3c15af5e, processorArchitecture=MSIL">
            <HintPath>..\packages\YamlDotNet.16.1.3\lib\net47\YamlDotNet.dll</HintPath>
        </Reference>
    </ItemGroup>
    <ItemGroup>
        <Compile Include="ConfigFileAccess.cs"/>
        <Compile Include="Model\BeehiveModel.cs"/>
        <Compile Include="Model\Configurable.cs"/>
        <Compile Include="Model\CookingStationModel.cs"/>
        <Compile Include="Model\SmelterModel.cs"/>
        <Compile Include="Model\FermenterModel.cs"/>
        <Compile Include="Properties\IgnoreAccessModifiers.cs"/>
        <Compile Include="CraftingSizeAndSpeedPlugin.cs"/>
        <Compile Include="Properties\AssemblyInfo.cs"/>
        <Compile Include="Registry.cs"/>
    </ItemGroup>
    <ItemGroup>
        <None Include="packages.config"/>
        <None Include="README.md"/>
    </ItemGroup>
    <ItemGroup>
        <None Include="Package\manifest.json"/>
    </ItemGroup>
    <ItemGroup>
        <Content Include="CHANGELOG.md"/>
        <Content Include="ILRepack.targets"/>
        <Content Include="Package\icon.png"/>
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets"/>
    <Target Name="JotunnPostBuildTaskWin" Condition="'$(OS)' == 'Windows_NT'">
        <Exec Command="powershell.exe -ExecutionPolicy RemoteSigned -File &quot;$(SolutionDir)publish.ps1&quot; -Target &quot;$(ConfigurationName)&quot; -TargetPath &quot;$(TargetDir.TrimEnd('\'))&quot; -TargetAssembly &quot;$(TargetFileName)&quot; -ValheimPath &quot;$(VALHEIM_INSTALL.TrimEnd('\'))&quot; -DeployPath &quot;$(MOD_DEPLOYPATH.TrimEnd('\'))&quot; -ProjectPath &quot;$(ProjectDir.TrimEnd('\'))&quot; "/>
    </Target>
    <PropertyGroup>
        <BuildDependsOn>
            $(BuildDependsOn);
            ILRepacker;
            JotunnPostBuildTaskWin
        </BuildDependsOn>
    </PropertyGroup>
    <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
        <PropertyGroup>
            <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them. For more information, see http://go.microsoft.com/fwlink/?LinkID=322105.The missing file is {0}.</ErrorText>
        </PropertyGroup>
        <Error Condition="!Exists('..\packages\JotunnLib.2.21.2\build\JotunnLib.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\JotunnLib.2.21.2\build\JotunnLib.props'))"/>
        <Error Condition="!Exists('..\packages\ILRepack.Lib.MSBuild.Task.2.0.34.2\build\ILRepack.Lib.MSBuild.Task.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\ILRepack.Lib.MSBuild.Task.2.0.34.2\build\ILRepack.Lib.MSBuild.Task.targets'))"/>
    </Target>
    <Import Project="..\packages\ILRepack.Lib.MSBuild.Task.2.0.34.2\build\ILRepack.Lib.MSBuild.Task.targets" Condition="Exists('..\packages\ILRepack.Lib.MSBuild.Task.2.0.34.2\build\ILRepack.Lib.MSBuild.Task.targets')"/>
</Project>